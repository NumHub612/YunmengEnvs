name: python

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  YunMeng_Test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-22.04

    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.10.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ${{ github.workspace }}/requirements.txt

      # - name: Run unittest tests
      #   run: |
      #     export PYTHONPATH=$PYTHONPATH:${{ github.workspace }}
      #     pip install pytest pytest-cov
      #     coverage run -m pytest
      #     coverage report
      #     coverage xml

      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v5
      #   with:
      #     files: ./coverage.xml
      #     token: ${{ secrets.CODECOV_TOKEN }}
          
      - name: Build and deploy docs
        if: ${{ matrix.os == 'ubuntu-22.04'}}
        run: |
          cd ${{ github.workspace }}
          pip install mkdocs
          pip install mkdocstrings[python]
          pip install mkdocs-material
          mkdocs build --site-dir site
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash

      - name: Set up pages
        if: ${{ matrix.os == 'ubuntu-22.04'}}
        uses: actions/configure-pages@v4

      - name: Upload artifact
        if: ${{ matrix.os == 'ubuntu-22.04'}}
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./docs"

      - name: Deploy docs to GitHub Pages
        if: ${{ matrix.os == 'ubuntu-22.04'}}
        uses: actions/deploy-pages@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build package
        if: ${{ matrix.os == 'ubuntu-22.04' && github.ref == 'refs/heads/main' }}
        run: |
          pip install setuptools wheel twine
          python setup.py sdist bdist_wheel

      # - name: Upload to PyPI
      #   if: ${{ matrix.os == 'ubuntu-22.04' && github.ref == 'refs/heads/main' }}
      #   env:
      #     TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
      #     TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      #   run: twine upload dist/*